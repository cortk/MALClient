<Page
    x:Class="MALClient.Pages.AnimeListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MALClient.Pages"
    xmlns:item="using:MALClient.Items"
    xmlns:controls="using:MALClient.UserControls"
    xmlns:converters="using:MALClient.XamlConverters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding AnimeList , Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:DisplayModeToPresenterControlVisibility x:Key="DisplayModeToPresenterControlVisibility" />
        <converters:DivideValueConverter x:Key="DivideValueConverter" />
        <x:String x:Key="IndefiniteCompactListString">IndefiniteCompactList</x:String>
        <x:String x:Key="IndefiniteListString">IndefiniteList</x:String>
        <x:String x:Key="IndefiniteGridString">IndefiniteGrid</x:String>
        <x:Double x:Key="ScrollBarMinThemeWidth">7</x:Double>
        <x:Double x:Key="ScrollBarMinThemeHeight">7</x:Double>
        <x:Double x:Key="ScrollBarPanningThumbThemeHeight">2.4</x:Double>
        <x:Double x:Key="ScrollBarPanningThumbThemeWidth">2.4</x:Double>
        
    </Page.Resources>

    <Page.BottomAppBar>
        <CommandBar x:Name="BottomCommandBar" Background="{ThemeResource BrushAppBars}">
            <CommandBar.SecondaryCommands>
                <AppBarButton Icon="Refresh" Label="Go back to my list" Command="{Binding GoBackToMyListCommand}"
                              Visibility="{Binding AppBtnGoBackToMyListVisibility}" />
                <AppBarButton
                    Visibility="{Binding AppBtnListSourceVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                    Icon="Contact2" Label="List source">
                    <AppBarButton.Flyout>
                        <Flyout x:Name="FlyoutListSource" Opened="FlyoutListSource_OnOpened">
                            <StackPanel>
                                <TextBlock VerticalAlignment="Center" Text="MAL Username:" />
                                <StackPanel Orientation="Horizontal">
                                    <TextBox x:Name="TxtListSource"
                                             Text="{Binding ListSource,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                             Margin="5,5" KeyDown="ListSource_OnKeyDown" />
                                    <Button Command="{Binding RefreshCommand}">
                                        <SymbolIcon Symbol="Accept" />
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton Icon="Refresh" Label="Reload" Command="{Binding RefreshCommand}" />
            </CommandBar.SecondaryCommands>
            <AppBarButton Icon="View" Label="Display mode">
                <AppBarButton.Flyout>
                    <Flyout x:Name="ViewsFlyout">
                        <ListView ItemsSource="{Binding DisplayModes}"
                                  SelectedItem="{Binding CurrentlySelectedDisplayMode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Height" Value="25" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Item2}" Height="25" />
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Calendar" Label="Select season"
                          Visibility="{Binding AppbarBtnPinTileVisibility}">
                <AppBarButton.Flyout>
                    <Flyout x:Name="FlyoutSeasonSelection">
                        <ListView ItemsSource="{Binding SeasonSelection}" SelectionMode="Single"
                                  SelectedIndex="{Binding SeasonalUrlsSelectedIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Sort" Label="Order by" Visibility="{Binding AppBtnSortingVisibility}">
                <AppBarButton.Flyout>
                    <Flyout x:Name="SortingFlyout">
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style TargetType="ToggleMenuFlyoutItem">
                                    <Setter Property="Height" Value="46" />
                                </Style>
                            </StackPanel.Resources>
                            <StackPanel x:Name="SortToggles">
                                <ToggleMenuFlyoutItem x:Name="SortTitle" Text="Title" Click="SelectSortMode" />
                                <ToggleMenuFlyoutItem x:Name="SortScore" Text="Score" Click="SelectSortMode" />
                                <ToggleMenuFlyoutItem x:Name="Sort3" Text="{Binding Sort3Label}" Click="SelectSortMode" />
                                <ToggleMenuFlyoutItem x:Name="SortAiring" Text="Soonest airing" Click="SelectSortMode"
                                                      Visibility="{Binding SortAirDayVisibility}" />
                                <ToggleMenuFlyoutItem x:Name="SortNone" Text="None" Click="SelectSortMode" />
                            </StackPanel>
                            <MenuFlyoutSeparator />
                            <ToggleMenuFlyoutItem x:Name="BtnOrderDescending" Text="Decsending" Click="ChangeSortOrder" />
                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Filter" Label="Filter">
                <AppBarButton.Flyout>
                    <Flyout x:Name="FiltersFlyout">
                        <ListView
                            SelectedIndex="{Binding StatusSelectorSelectedIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                            SelectionMode="Single">
                            <ListView.Items>
                                <ListViewItem Content="{Binding Filter1Label}" />
                                <ListViewItem Content="Completed" />
                                <ListViewItem Content="On hold" />
                                <ListViewItem Content="Dropped" />
                                <ListViewItem Content="{Binding Filter5Label}" />
                                <ListViewItem Content="{Binding StatusAllLabel}" />
                            </ListView.Items>
                        </ListView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>
    </Page.BottomAppBar>
    <Grid Background="{ThemeResource BrushDeepBackground}">
        <Grid.Resources>
            <ResourceDictionary>
                <Style TargetType="PivotHeaderPanel">
                    <Setter Property="Visibility" Value="Collapsed" />
                    
                </Style>
                <Style TargetType="ScrollBar">
                    <Setter Property="MinWidth" Value="{ThemeResource ScrollBarMinThemeWidth}"/>
                    <Setter Property="MinHeight" Value="{ThemeResource ScrollBarMinThemeHeight}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="IsTabStop" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ScrollBar">
                                <Grid x:Name="Root" Background="{ThemeResource BrushSliderRailBackground}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ScrollingIndicatorStates">
                                            <VisualState x:Name="TouchIndicator">
                                            </VisualState>
                                            <VisualState x:Name="MouseIndicator"/>
                                            <VisualState x:Name="NoIndicator">
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="HorizontalPanningRoot" MinWidth="53">
                                        <Rectangle x:Name="HorizontalPanningThumb" AutomationProperties.AccessibilityView="Raw" 
                                                   Fill="{ThemeResource ScrollBarPanningBackgroundThemeBrush}" HorizontalAlignment="Left" 
                                                   Height="{ThemeResource ScrollBarPanningThumbThemeHeight}" 
                                                   MinWidth="{ThemeResource ScrollBarMinThemeWidth}"/>
                                    </Grid>
                                    <Grid x:Name="VerticalPanningRoot" MinHeight="53">
                                        <Rectangle x:Name="VerticalPanningThumb" AutomationProperties.AccessibilityView="Raw"                                                   
                                                   MinHeight="{ThemeResource ScrollBarMinThemeHeight}" VerticalAlignment="Top" 
                                                   Width="{ThemeResource ScrollBarMinThemeWidth}"
                                                   Fill="{ThemeResource BrushScrollBar}">
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ResourceDictionary>
        </Grid.Resources>
        <controls:AlternatingListView x:Name="AnimeCompactItemsIndefinite" HorizontalAlignment="Stretch"  Margin="3,0,0,0" Padding="3,0,0,0"
                                      ItemsSource="{Binding AnimeCompactItems}" SelectionMode="Single"
                                      RightTapped="AnimeCompactItemsIndefinite_OnRightTapped"
                                      ItemClick="AnimeCompactItemsIndefinite_OnItemClick"
                                      IsItemClickEnabled="True"
                                      Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource IndefiniteCompactListString}}">
            <controls:AlternatingListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="BorderBrush" Value="{StaticResource SystemControlBackgroundAccentBrush}"/>
                    <Setter Property="BorderThickness" Value="2,0,0,0"/>
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="Padding" Value="3,0,0,0"/>
                </Style>
            </controls:AlternatingListView.ItemContainerStyle>
        </controls:AlternatingListView>
        <GridView x:Name="AnimesItemsIndefinite" ItemsSource="{Binding AnimeItems}" MinWidth="400"
                  RightTapped="AnimesItemsIndefinite_OnRightTapped" SelectionMode="Single"
                  HorizontalAlignment="Center" HorizontalContentAlignment="Stretch"
                  ItemClick="AnimesItemsIndefinite_OnItemClick"
                  IsItemClickEnabled="True"
                  Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource IndefiniteListString}}">
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="Background" Value="{ThemeResource BrushAnimeItemInnerBackground}"/>
                    <Setter Property="BorderBrush"
                                            Value="{StaticResource SystemControlBackgroundAccentBrush}" />
                    <Setter Property="BorderThickness" Value="2,0,0,0" />
                </Style>
            </GridView.ItemContainerStyle>
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsWrapGrid  Orientation="Horizontal" HorizontalAlignment="Stretch" ItemWidth="{Binding ListItemGridWidth}"/>                
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
        </GridView>
        <GridView x:Name="AnimesGridIndefinite" Margin="1" ItemsSource="{Binding AnimeGridItems}" MinWidth="200"
                  RightTapped="AnimesGridIndefinite_OnRightTapped" SelectionMode="Single"
                  ItemClick="AnimesGridIndefinite_OnItemClick"
                  IsItemClickEnabled="True"
                  HorizontalAlignment="Center"
                  Visibility="{Binding DisplayMode,Converter={StaticResource DisplayModeToPresenterControlVisibility},ConverterParameter={StaticResource IndefiniteGridString}}">
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="Padding" Value="5,5" />
                    <Setter Property="Margin" Value="2,5" />
                    <Setter Property="Width" Value="200" /> 
                    <Setter Property="Height" Value="350" /> 
                </Style>
            </GridView.ItemContainerStyle>
        </GridView>
        <StackPanel Margin="{Binding ElementName=AnimesPivot, Path=Margin}" HorizontalAlignment="Center"
                    VerticalAlignment="Center">
            <TextBlock
                Visibility="{Binding EmptyNoticeVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                Text="{Binding EmptyNoticeContent}"
                TextWrapping="WrapWholeWords" TextAlignment="Center" Foreground="#FFB9B9B9" />
            <Button x:Name="BtnSetSource" Content="Set source" Margin="0,10,0,0" VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Visibility="{Binding BtnSetSourceVisibility,Converter={StaticResource BoolToVisibilityConverter}}"
                    Click="ShowListSourceFlyout" />
        </StackPanel>

        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              Visibility="{Binding Loading,Converter={StaticResource BoolToVisibilityConverter}}"
              Background="{ThemeResource BrushLoading}">
            <ProgressRing
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="150" Height="150"
                IsActive="True" />
        </Grid>
    </Grid>
</Page>